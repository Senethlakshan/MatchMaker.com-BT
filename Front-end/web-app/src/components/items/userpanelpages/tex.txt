

UserDashboard.js

import React, { useState } from "react";
import Sidebar from "../../items/userpanelpages/Sidebar";
import MiddleContent from "../../items/userpanelpages/MiddleContent";
import RightSidebar from "../../items/userpanelpages/RightSidebar";
import MobileSidebarPopup from "../../items/userpanelpages/MobileSidebarPopup";

import { FaFilter , FaArrowLeft } from "react-icons/fa";
import { useMediaQuery } from "react-responsive";


const UserDashboard = () => {
  const [favorites, setFavorites] = useState([]);
  const [showFavorites, setShowFavorites] = useState(false);
  const [filters, setFilters] = useState({
    age: "",
    religion: "",
    country: "",
    caste: "",
    height: "",
    education: "",
    gender: "",
  });

  const toggleFavorites = () => {
    setShowFavorites(!showFavorites);
  };

  const addToFavorites = (userName) => {
    setFavorites((prevFavorites) => [...prevFavorites, userName]);
  };

  const handleFilterChange = (e) => {
    const { name, value } = e.target;
    setFilters((prevFilters) => ({
      ...prevFilters,
      [name]: value,
    }));
  };

  const memberData = [
    // Sample member data (Replace with your actual data)
    {
      id: 1,
      name: "User Name 1",
      age: 30,
      religion: "Religion 1",
      country: "Country 1",
      caste: "Caste 1",
      height: "5'10\"",
      education: "Education 1",
      gender: "male",
    },
    {
      id: 2,
      name: "User Name 2",
      age: 28,
      religion: "Religion 2",
      country: "Country 2",
      caste: "Caste 2",
      height: "5'6\"",
      education: "Education 2",
      gender: "female",
    },
    {
      id: 1,
      name: "User Name 1",
      age: 30,
      religion: "Religion 1",
      country: "Country 1",
      caste: "Caste 1",
      height: "5'10\"",
      education: "Education 1",
      gender: "male",
    },
    {
      id: 2,
      name: "User Name 2",
      age: 28,
      religion: "Religion 2",
      country: "Country 2",
      caste: "Caste 2",
      height: "5'6\"",
      education: "Education 2",
      gender: "female",
    },
    {
      id: 1,
      name: "User Name 1",
      age: 30,
      religion: "Religion 1",
      country: "Country 1",
      caste: "Caste 1",
      height: "5'10\"",
      education: "Education 1",
      gender: "male",
    },
    {
      id: 2,
      name: "User Name 2",
      age: 28,
      religion: "Religion 2",
      country: "Country 2",
      caste: "Caste 2",
      height: "5'6\"",
      education: "Education 2",
      gender: "female",
    },
    {
      id: 1,
      name: "User Name 1",
      age: 30,
      religion: "Religion 1",
      country: "Country 1",
      caste: "Caste 1",
      height: "5'10\"",
      education: "Education 1",
      gender: "male",
    },
    {
      id: 2,
      name: "User Name 2",
      age: 28,
      religion: "Religion 2",
      country: "Country 2",
      caste: "Caste 2",
      height: "5'6\"",
      education: "Education 2",
      gender: "female",
    },
  ];

  const isMobile = useMediaQuery({ query: "(max-width: 767px)" });
  const [showLeftSidebar, setShowLeftSidebar] = useState(false);

  const toggleLeftSidebar = () => {
    setShowLeftSidebar((prevState) => !prevState);
  };

  const handleCloseMobileSidebar = () => {
    setShowLeftSidebar(false);
  };

  return (
    <div className="bg-gray-400 min-h-screen">
      {/* Show/Hide Sidebar Button for Mobile View */}
      {isMobile && (
        <button
          className="fixed top-30 right-4 bg-red-500 m-1 text-white rounded p-2 flex items-center z-10"
          onClick={toggleLeftSidebar}
        >
          {showLeftSidebar ? (
            <>
              <FaArrowLeft className="mr-1" /> Hide Filter Bar
            </>
          ) : (
            <>
              <FaFilter  className="mr-1" /> Filter Bar
            </>
          )}
        </button>
      )}

      {/* Main Content */}
      <div className="container mx-auto p-4 md:flex md:flex-row md:justify-between xl:w-820 xl:h-1180 xl:mx-auto relative">
        {/* Left Sidebar Popup Box for Mobile View */}
        {isMobile && showLeftSidebar && (
          <MobileSidebarPopup
            filters={filters}
            handleFilterChange={handleFilterChange}
            onClose={handleCloseMobileSidebar}
          />
        )}

        {/* Left Sidebar (Hide in mobile view) */}
        {!isMobile && <Sidebar filters={filters} handleFilterChange={handleFilterChange} />}

        {/* Middle Section - User Profiles/Feed */}
        <MiddleContent
          memberData={memberData}
          addToFavorites={addToFavorites}
          className={`md:w-3/5 xl:w-4/5 ${isMobile ? "md:mx-auto" : ""}`} // Conditionally apply mx-auto class in mobile view
        />

        {/* Right Sidebar */}
        <RightSidebar
          showFavorites={showFavorites}
          toggleFavorites={toggleFavorites}
          favorites={favorites}
        />
      </div>
    </div>
  );
};

export default UserDashboard;


MiddleContent.js :

import React from "react";

const MiddleContent = ({ memberData, addToFavorites }) => {
  return (
    <div className="bg-white p-4 md:w-1/2 mt-4 md:mt-0 md:overflow-y-auto">
      {/* ... (member profiles/feed code) */}
      <h2 className="text-gray-800 text-xl font-semibold mb-2 bg-green-600">Member Profiles</h2>
      {/* User Profile Cards or Feed Items */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {memberData.map((member) => (
          <div key={member.id} className="border border-gray-300 p-2">
            <h3 className="text-blue-500 font-semibold">{member.name}</h3>
            <p>Age: {member.age}</p>
            <p>Religion: {member.religion}</p>
            {/* ... (rest of the member details) */}
            <button
              className="bg-blue-600 text-white px-4 py-2 rounded-md mt-2"
              onClick={() => addToFavorites(member.name)}
            >
              Add to Favorites
            </button>
          </div>
        ))}
      </div>
    </div>
  );
};

export default MiddleContent;


RightSidebar.js :

import React from "react";

const RightSidebar = ({ showFavorites, toggleFavorites, favorites }) => {
  return (
    <div className="bg-blue-400 p-4 md:w-1/4 mt-4 md:mt-0">
      {/* ... (favorites and web ads code) */}
      <div>
        <h2 className="text-white text-lg font-semibold mb-2">Favorites</h2>
        <button
          className="bg-blue-600 text-white px-4 py-2 rounded-md"
          onClick={toggleFavorites}
        >
          {showFavorites ? "Hide Favorites" : "Show Favorites"}
        </button>
        {showFavorites && (
          <div className="border border-gray-300 p-2 mt-2">
            {/* Display favorites here */}
            {favorites.length === 0 ? (
              <p>No favorites added yet.</p>
            ) : (
              <ul>
                {favorites.map((userName, index) => (
                  <li key={index}>{userName}</li>
                ))}
              </ul>
            )}
          </div>
        )}
      </div>
      {/* Web Ads Section */}
      <div className="mt-4">
        <h2 className="text-white text-lg font-semibold mb-2">Web Ads</h2>
        {/* Add your web banner content here */}
        {/* For example: Advertisements, Promotions, etc. */}
      </div>
    </div>
  );
};

export default RightSidebar;
